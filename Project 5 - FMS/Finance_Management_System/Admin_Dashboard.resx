<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAQAABILAAASCwAAAAAAAAAA
        AABAREQDQEREA0BERANAREQD0v//ADM0NFgzMzOTMzMzfzMzM4IzMzOAMzMzgTMzM4EzMzN/MzMzlzQ0
        NC7///8AQEREA0BERARAREQEQEREBG1/fwE0NDReNDQ0WTMzM4Y0NDQ7MzQ0dzQ0NFg0NDRVMzQ0eDQ0
        NGg0NDQ4AAAAAEBERANAREQEQEREBEBERARsfX0BNDQ0XTQ0NGYzMzPGNDQ0UDMzM60zMzN9MzMzeDMz
        M7A0NDRpNDQ0OAAAAABAREQDQEREBEBERARAREQEbH5+ATQ0NF40NDRHMzQ0UjQ1NSI0NDRJNDQ0NTQ0
        NDI0NDRINDQ0XzQ0NDgAAAAAQEREA0BERARAREQEQENEBKNefgE0NDRcNDQ0bDMzM900NDRZMzMzwDMz
        M4szMzOFMzMzxTQ0NGs0NDQ4AAAAAEBERANAREQEQEREBDxLRwQSsXwFMzQ0XzQ0NEc0NDRVNDU1IzQ0
        NEs0NDQ2NDQ0NDQ0NEs0NDRgNDQ0OAAAAABAREQDQUNDBIMAFAENpHEPAbp8Zi5DPGg0MzNkMzMzwjQ0
        NE4zMzOpMzQ0ejMzM3UzMzOsNDQ0aTQ0NDgAAAAAQUNDA1kaLwMEtHg4Arh7pwC7fNYhZU6TNi0wUTUw
        MYM1MDEzNTAxczUwMVI1MDFONTAydTQzM2M0NDQ4AAAAAIcABgIJqnQcAbl7zQG5e7gBu3ykKFJEfCVa
        SEUAvn4+A7Z6QwK4e0IDt3pDA7d6QwDAfzcvPzphNDMzOAAAAADmAAABBq92JwG4e7ICt3o+ALx9fy9A
        OmkUiGGFALt88wG5e/gBuXv4Abl7+AG5e/oAu3zbJlhHezYvMTcAAAAAQUFDAzdWTAULp3IXA7V5TgG7
        fMAiYkyRFYVfegC8fd8BunzkAbp85AG6fOQBunzlAL19yCZWRnc2LzI3AAAAAEY5PwMocFkGArd6ggG5
        e+sAu3zZImFMiDE6N4MmV0aGJldHiCZXRogmV0aIJldHiCdURYIyODaPNDQ0Mdv//wBvABsCC6dzGAG5
        e9MCuHuMAbl7hAyebUwQk2eRMEA7MTgsMCo3LTEqNy0xKjctMSo3LjErNTQ0Jzg6OgpCRkYDUyE0AxKZ
        bA4BuXu3Abh7sgG4e6oBuXvAAbp8sg2teAqLJ08BVmBgAVZgYAFWYGABVmFhAVFaWgJBRkYDQEREA0BE
        RANkAiUCBbJ4MAK4e50BuXvbArh7ngWyeC5rAB8CQEREBEBERARAREQEQEREBEBERARAREQEQEREBEBE
        RANAREQDQUNEA34AEwELqHMOArd6cAuocw97ABYBQENEA0BERANAREQDQEREA0BERANAREQDQEREA0BE
        RANAREQDAAAAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAA==
</value>
  </data>
</root>